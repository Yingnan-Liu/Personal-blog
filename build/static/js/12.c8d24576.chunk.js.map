{"version":3,"sources":["components/InputItem/index.js","components/InputItem/index.module.less","components/SubmitButton/index.js","components/SubmitButton/index.module.less","pages/Register/index.module.less","utils/ajax.js","constants/index.js","api/register.js","pages/Register/index.js","actions/register.js"],"names":["InputItem","props","name","rules","label","onClick","rest","useState","timing","setTiming","count","setCount","useEffect","interval","setInterval","preSec","clearInterval","Item","gutter","span","className","styles","getCaptcha","size","disabled","style","fontSize","color","autoComplete","module","exports","SubmitButton","children","console","log","submit","type","htmlType","getAxiosInstance","axios","create","get","url","option","instance","method","post","HOST","params","ajax","data","headers","Option","passwordStatusMap","ok","success","pass","warning","poor","error","passwordProgressMap","Register","dispatch","useDispatch","visible","setVisible","popover","setPopover","useForm","form","registerContainer","register","onFinish","values","placeholder","required","message","content","value","getFieldValue","passwordStatus","length","getPasswordStatus","progress","status","strokeWidth","percent","showInfo","format","renderPasswordProgress","overlayStyle","width","placement","validator","__","promise","Promise","validateFields","resolve","reject","defaultValue","onChange","pattern","then","getFieldsValue","payload","a","api","code","msg","captcha","justify","align","to"],"mappings":"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","file":"static/js/12.c8d24576.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Input, Form, Button, Row, Col } from \"antd\";\r\nimport styles from \"./index.module.less\";\r\n\r\nconst InputItem = (props) => {\r\n  const { name, rules, label, onClick, ...rest } = props;\r\n\r\n  // 点击后倒计时效果\r\n  const [timing, setTiming] = useState(false); //是否在倒计时\r\n  //倒计时秒数\r\n  const [count, setCount] = useState(30);\r\n\r\n  // 获取验证码按钮点击事件 在register组件中实现\r\n\r\n  useEffect(() => {\r\n    let interval = 0;\r\n    if (timing) {\r\n      interval = setInterval(() => {\r\n        setCount((preSec) => {\r\n          if (preSec <= 1) {\r\n            setTiming(false);\r\n            clearInterval(interval);\r\n            return 30;\r\n          }\r\n          //return覆盖count\r\n          return preSec - 1;\r\n        });\r\n      }, 1000);\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [timing]);\r\n\r\n  if (name === \"captcha\") {\r\n    return (\r\n      <Form.Item name={name} rules={rules} label={label}>\r\n        <Row gutter=\"8\">\r\n          <Col span={16}>\r\n            <Input {...rest} />\r\n          </Col>\r\n          <Col span=\"8\">\r\n            <Button\r\n              className={styles.getCaptcha}\r\n              size=\"large\"\r\n              //点击后禁用按钮\r\n              disabled={timing}\r\n              onClick={onClick}\r\n            >\r\n              <span style={{ fontSize: \"15px\", color: \"grey\" }}>\r\n                {timing ? `${count}秒` : \"获取验证码\"}\r\n              </span>\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form.Item>\r\n    );\r\n  }\r\n\r\n  return (\r\n    // Form.item可以有间距样式 包裹一下\r\n    <Form.Item name={name} rules={rules} label={label}>\r\n      <Input {...rest} autoComplete=\"off\" />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default InputItem;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"getCaptcha\":\"getCaptcha--3fxS6\"};","import React from \"react\";\r\nimport { Button, Form } from \"antd\";\r\nimport styles from \"./index.module.less\";\r\n\r\nconst SubmitButton = (props) => {\r\n  const { children } = props;\r\n  console.log(props);\r\n  return (\r\n    <Form.Item>\r\n      <Button\r\n        className={styles.submit}\r\n        type=\"primary\"\r\n        size=\"large\"\r\n        htmlType=\"submit\"\r\n      >\r\n        {children}\r\n      </Button>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default SubmitButton;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"submit--322DD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerContainer\":\"registerContainer--SCqFQ\",\"register\":\"register--1Jc2V\",\"success\":\"success--3HBpd\",\"warning\":\"warning--J0TE0\",\"error\":\"error--15uNq\",\"progress-pass\":\"progress-pass--3DS9f\",\"progress\":\"progress--1fQ1L\"};","import axios from \"axios\";\r\n\r\n//通过axios实例发送请求\r\n\r\nfunction getAxiosInstance() {\r\n  const instance = axios.create();\r\n  return instance;\r\n}\r\n\r\n//封装常用方法\r\n\r\nfunction makeGet() {\r\n  return function (url, option) {\r\n    const instance = getAxiosInstance(option);\r\n    return instance({\r\n      url,\r\n      method: \"get\",\r\n      ...option,\r\n    });\r\n  };\r\n}\r\nfunction makePost() {\r\n  return function (url, option) {\r\n    const instance = getAxiosInstance(option);\r\n    return instance({\r\n      url,\r\n      method: \"post\",\r\n      ...option,\r\n    });\r\n  };\r\n}\r\n\r\nexport default {\r\n  get: makeGet(),\r\n  post: makePost(),\r\n};\r\n","//用来定义项目中的常量\r\n\r\nexport const HOST = \"http://123.57.164.143:8099/jzsf\";\r\n","import ajax from \"../utils/ajax\";\r\nimport { HOST } from \"../constants\";\r\n\r\n/***\r\n * 登录注册相关的请求接口\r\n */\r\n\r\nexport function getCaptcha(params) {\r\n  return ajax.post(`${HOST}/user/getCaptcha`, {\r\n    data: params,\r\n    headers: { \"content-type\": \"application/x-www-form-urlencoded\" },\r\n  });\r\n}\r\n\r\nexport function register(params) {\r\n  return ajax.post(`${HOST}/user/register`, {\r\n    data: params,\r\n  });\r\n}\r\nexport function login(params) {\r\n  return ajax.post(`${HOST}/user/login`, { data: params });\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Popover, Progress, Row, Select, Col } from \"antd\";\r\nimport styles from \"./index.module.less\";\r\nimport { getCaptcha } from \"../../actions/register\";\r\nimport { useDispatch } from \"redux-react-hook\";\r\nimport InputItem from \"../../components/InputItem\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\n\r\nconst { Option } = Select;\r\n\r\n//密码强度定义\r\nconst passwordStatusMap = {\r\n  ok: <div className={styles.success}>强度：强</div>,\r\n  pass: <div className={styles.warning}>强度：中</div>,\r\n  poor: <div className={styles.error}>强度：弱</div>,\r\n};\r\nconst passwordProgressMap = {\r\n  ok: \"success\",\r\n  pass: \"normal\",\r\n  poor: \"exception\",\r\n};\r\n\r\nconst Register = () => {\r\n  const dispatch = useDispatch();\r\n  const [visible, setVisible] = useState(false);\r\n  const [popover, setPopover] = useState(false); //触发popover重绘\r\n\r\n  const [form] = Form.useForm();\r\n  const handleFinish = (values) => {\r\n    console.log(values);\r\n  };\r\n  //自定义校验规则:检验confirm和password是否匹配\r\n  const checkConfirm = (__, value) => {\r\n    const promise = Promise;\r\n    if (value && value !== form.getFieldValue(\"password\")) {\r\n      return promise.reject(\"两次输入密码不匹配\");\r\n    }\r\n    return promise.resolve();\r\n  };\r\n  //自定义校验规则：检验password和confirm是否匹配\r\n  //这里visible不太理解\r\n  const checkPassword = (__, value) => {\r\n    const promise = Promise;\r\n    if (!value) {\r\n      //没有输入的时候\r\n      setVisible(!!value); //null 空string 转换为布尔\r\n      return promise.reject(\"请输入密码\");\r\n    } else if (!visible) {\r\n      //没有visible\r\n      setVisible(!!value);\r\n    } else if (value && form.getFieldValue(\"confirm\")) {\r\n      //校验password与confirm\r\n      form.validateFields([\"confirm\"]);\r\n    }\r\n    setPopover(!popover); // 一直改变状态使popover重绘\r\n    return promise.resolve();\r\n  };\r\n  //判断密码强度\r\n  const getPasswordStatus = (value) => {\r\n    if (value && value.length > 9) {\r\n      return \"ok\";\r\n    }\r\n    if (value && value.length > 5) {\r\n      return \"pass\";\r\n    }\r\n    return \"poor\";\r\n  };\r\n\r\n  //密码输入进度条设置\r\n  const renderPasswordProgress = () => {\r\n    const value = form.getFieldValue(\"password\");\r\n    // console.log(value);\r\n    const passwordStatus = getPasswordStatus(value);\r\n    return (\r\n      value &&\r\n      value.length && (\r\n        <div className={styles[`progress-${passwordStatus}`]}>\r\n          {passwordStatusMap[passwordStatus]}\r\n          <Progress\r\n            className={styles.progress}\r\n            status={passwordProgressMap[passwordStatus]}\r\n            strokeWidth={6}\r\n            percent={value.length * 10 > 100 ? 100 : value.length * 10}\r\n            showInfo={false}\r\n            format={() => passwordStatus}\r\n          ></Progress>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n  const handleSelect = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  const handleClickCaptcha = () => {\r\n    // validateFields触发表单验证 返回一个promise\r\n    form.validateFields([\"username\", \"email\", \"password\"]).then(() => {\r\n      console.log(form.getFieldsValue([\"username\", \"email\", \"password\"]));\r\n      dispatch(\r\n        //异步aciton 传入三个参数作为payload\r\n        getCaptcha(form.getFieldsValue([\"username\", \"email\", \"password\"]))\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.registerContainer}>\r\n      <div className={styles.register}>\r\n        <Form form={form} onFinish={handleFinish}>\r\n          <InputItem\r\n            name=\"username\"\r\n            placeholder=\"请输入用户名\"\r\n            size=\"large\"\r\n            rules={[{ required: true, message: \"请输入用户名\" }]}\r\n          />\r\n          <InputItem\r\n            name=\"email\"\r\n            placeholder=\"请输入邮箱\"\r\n            size=\"large\"\r\n            rules={[\r\n              { required: true, message: \"请输入邮箱\" },\r\n              { type: \"email\", message: \"请填写正确邮格式\" },\r\n            ]}\r\n          />\r\n          <Popover\r\n            content={\r\n              visible && (\r\n                <div>\r\n                  {/* 这里注意是调用 要加括号 */}\r\n                  {renderPasswordProgress()}\r\n                  <div>请至少输入6个字符。请不要使用容易被猜到的密码。</div>\r\n                </div>\r\n              )\r\n            }\r\n            overlayStyle={{ width: 240 }}\r\n            placement=\"right\"\r\n            visible={visible}\r\n          >\r\n            <InputItem\r\n              name=\"password\"\r\n              placeholder=\"至少6位密码，区分大小写\"\r\n              type=\"password\"\r\n              size=\"large\"\r\n              rules={[\r\n                {\r\n                  validator: checkPassword,\r\n                },\r\n              ]}\r\n            />\r\n          </Popover>\r\n          <InputItem\r\n            name=\"confirm\"\r\n            placeholder=\"确认密码\"\r\n            type=\"password\"\r\n            size=\"large\"\r\n            rules={[\r\n              { required: true, message: \"请再次确认密码\" },\r\n              { validator: checkConfirm },\r\n            ]}\r\n          />\r\n          <Row gutter={2}>\r\n            <Col span={6}>\r\n              <Select\r\n                defaultValue=\"+86\"\r\n                onChange={handleSelect}\r\n                size=\"large\"\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <Option value=\"86\">+86</Option>\r\n                <Option value=\"87\">+87</Option>\r\n              </Select>\r\n            </Col>\r\n            <Col span={18}>\r\n              <InputItem\r\n                name=\"mobile\"\r\n                placeholder=\"手机号\"\r\n                type=\"password\"\r\n                size=\"large\"\r\n                rules={[\r\n                  { required: true, message: \"请输入手机号\" },\r\n                  { pattern: /^\\d{11}$/, message: \"手机号格式错误\" },\r\n                ]}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <InputItem\r\n            name=\"captcha\"\r\n            placeholder=\"验证码\"\r\n            size=\"large\"\r\n            rules={[{ required: true, message: \"请输入验证码\" }]}\r\n            onClick={handleClickCaptcha}\r\n          />\r\n          <Row justify=\"space-between\" align=\"middle\">\r\n            <Col span={8}>\r\n              <SubmitButton>注册</SubmitButton>\r\n            </Col>\r\n            <Col>\r\n              <Link to=\"/login\">使用已有账户登录</Link>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Register;\r\n","import { message } from \"antd\";\r\nimport * as api from \"../api/register\";\r\n// action creator\r\nexport function getCaptcha(payload = {}) {\r\n  return async () => {\r\n    console.log(\"getCaptcha test\");\r\n    //api中发送post请求 payload作为data传入\r\n    const result = await api.getCaptcha(payload);\r\n    const {\r\n      code,\r\n      message: msg,\r\n      data: { captcha },\r\n    } = await api.getCaptcha(payload);\r\n    if (code === 20020) {\r\n      message.success(`${msg}，验证码为${captcha}`);\r\n    } else {\r\n      message.error(msg);\r\n    }\r\n    if (code === 20020) {\r\n      message.success(`${msg}，验证码为${captcha}`);\r\n    } else {\r\n      message.error(msg);\r\n    }\r\n  };\r\n}\r\nexport function register(payload = {}) {\r\n  return async () => {\r\n    const { code, message: msg } = await api.register(payload);\r\n    if (code === 20023) {\r\n      message.success(msg);\r\n    } else {\r\n      message.error(msg);\r\n    }\r\n  };\r\n}\r\nexport function login(payload = {}) {\r\n  return async () => {\r\n    const {\r\n      code,\r\n      message: msg,\r\n      data: { token } = {},\r\n    } = await api.login(payload);\r\n    if (code === 0) {\r\n      message.success(msg);\r\n      window.localStorage.setItem(\"personal-app-token\", token);\r\n      window.location.href = \"/\";\r\n    } else {\r\n      message.error(msg);\r\n    }\r\n  };\r\n}\r\n"],"sourceRoot":""}